/* the compile-time options used to build the SQLite3 library
 *
 * https://github.com/azadkuh/sqlite-amalgamation
 */

#ifndef SQLITE3_CONFIG_H
#define SQLITE3_CONFIG_H

#cmakedefine SQLITE_HAVE_ZLIB 
#cmakedefine SQLITE_HAVE_C99_MATH_FUNCS
#cmakedefine SQLITE_HAVE_TCL

#cmakedefine SQLITE_ENABLE_DESERIALIZE
#cmakedefine SQLITE_ENABLE_JSON1
#cmakedefine SQLITE_ENABLE_SELECTTRACE
#cmakedefine SQLITE_FORCE_OS_TRACE
#cmakedefine01 SQLITE_DEBUG

#cmakedefine SQLITE_RECOMMENDED_OPTIONS
#if defined(SQLITE_RECOMMENDED_OPTIONS)
#   define SQLITE_DQS 0
#   define SQLITE_DEFAULT_MEMSTATUS 1
#   define SQLITE_DEFAULT_WAL_SYNCHRONOUS 1
#   define SQLITE_LIKE_DOESNT_MATCH_BLOBS
#   define SQLITE_MAX_EXPR_DEPTH 50
#   define SQLITE_OMIT_DECLTYPE
#   define SQLITE_OMIT_DEPRECATED
//#   define SQLITE_OMIT_PROGRESS_CALLBACK
#   define SQLITE_OMIT_SHARED_CACHE
#   define SQLITE_USE_ALLOCA
#endif /* SQLITE_RECOMMENDED_OPTIONS */

//#define HAVE_ISNAN
//#define SQLITE_32BIT_ROWID
//#define SQLITE_4_BYTE_ALIGNED_MALLOC

// The datatype used to store estimates of the number of rows in a table or index.
#cmakedefine SQLITE_64BIT_STATS

#define SQLITE_ALLOW_COVERING_INDEX_SCAN 1
#cmakedefine SQLITE_ALLOW_URI_AUTHORITY

//#define SQLITE_ATOMIC_INTRINSICS
//#define SQLITE_BITMASK_TYPE

//#define SQLITE_BUG_COMPATIBLE_20160819

#cmakedefine SQLITE_CASE_SENSITIVE_LIKE
#cmakedefine SQLITE_CHECK_PAGES
#cmakedefine SQLITE_COVERAGE_TEST
#cmakedefine SQLITE_DEFAULT_AUTOMATIC_INDEX
#cmakedefine SQLITE_DEFAULT_AUTOVACUUM
//#define SQLITE_DEFAULT_CACHE_SIZE  -2000
#cmakedefine SQLITE_DEFAULT_CKPTFULLFSYNC
//#define SQLITE_DEFAULT_FILE_FORMAT 4
//#define SQLITE_DEFAULT_FILE_PERMISSIONS 0644

// Enforce foreign key constraints:
#cmakedefine SQLITE_DEFAULT_FOREIGN_KEYS 

//#define SQLITE_DEFAULT_JOURNAL_SIZE_LIMIT -1

// locking modes for attached databases: PAGER_LOCKINGMODE_NORMAL(0), PAGER_LOCKINGMODE_EXCLUSIVE(1)
#define SQLITE_DEFAULT_LOCKING_MODE 0

//#define SQLITE_DEFAULT_LOOKASIDE  1200,40
#ifndef SQLITE_DEFAULT_MEMSTATUS
#define SQLITE_DEFAULT_MEMSTATUS 1
#endif
//#define SQLITE_DEFAULT_MMAP_SIZE 0
//#define SQLITE_DEFAULT_PAGE_SIZE 4096
//#define SQLITE_DEFAULT_PCACHE_INITSZ 20
//#define SQLITE_DEFAULT_PROXYDIR_PERMISSIONS 0755
//#define SQLITE_DEFAULT_RECURSIVE_TRIGGERS 0
//#define SQLITE_DEFAULT_ROWEST  ~~ 200
//#define SQLITE_DEFAULT_SECTOR_SIZE 4096
//#define SQLITE_DEFAULT_SYNCHRONOUS  2
//#define SQLITE_DEFAULT_WAL_AUTOCHECKPOINT 1000
//#define SQLITE_DEFAULT_WAL_SYNCHRONOUS   SQLITE_DEFAULT_SYNCHRONOUS
//#define SQLITE_DEFAULT_WORKER_THREADS 0

#cmakedefine SQLITE_DIRECT_OVERFLOW_READ
#cmakedefine SQLITE_DISABLE_DIRSYNC
#cmakedefine SQLITE_DISABLE_FTS3_UNICODE
#cmakedefine SQLITE_DISABLE_FTS4_DEFERRED
#cmakedefine SQLITE_DISABLE_INTRINSIC
#cmakedefine SQLITE_DISABLE_LFS
#cmakedefine SQLITE_DISABLE_PAGECACHE_OVERFLOW_STATS
#cmakedefine SQLITE_DISABLE_SKIPAHEAD_DISTINCT
#cmakedefine SQLITE_ENABLE_8_3_NAMES
#cmakedefine SQLITE_ENABLE_API_ARMOR
#cmakedefine SQLITE_ENABLE_ATOMIC_WRITE
#cmakedefine SQLITE_ENABLE_BATCH_ATOMIC_WRITE
#cmakedefine SQLITE_ENABLE_BYTECODE_VTAB
#cmakedefine SQLITE_ENABLE_CEROD
#cmakedefine SQLITE_ENABLE_COLUMN_METADATA
#cmakedefine SQLITE_ENABLE_COLUMN_USED_MASK
#cmakedefine SQLITE_ENABLE_COSTMULT
#cmakedefine SQLITE_ENABLE_CURSOR_HINTS
#cmakedefine SQLITE_ENABLE_DBPAGE_VTAB
#cmakedefine SQLITE_ENABLE_DBSTAT_VTAB
#cmakedefine SQLITE_ENABLE_EXPENSIVE_ASSERT
#cmakedefine SQLITE_ENABLE_EXPLAIN_COMMENTS
#cmakedefine SQLITE_ENABLE_FTS3
#cmakedefine SQLITE_ENABLE_FTS3_PARENTHESIS
#cmakedefine SQLITE_ENABLE_FTS3_TOKENIZER
#cmakedefine SQLITE_ENABLE_FTS4
#cmakedefine SQLITE_ENABLE_FTS5
#cmakedefine SQLITE_ENABLE_GEOPOLY
#cmakedefine SQLITE_ENABLE_HIDDEN_COLUMNS
#cmakedefine SQLITE_ENABLE_ICU
#cmakedefine SQLITE_ENABLE_IOTRACE
#cmakedefine SQLITE_ENABLE_LOAD_EXTENSION
#cmakedefine SQLITE_ENABLE_LOCKING_STYLE
#cmakedefine SQLITE_ENABLE_MATH_FUNCTIONS
#cmakedefine SQLITE_ENABLE_MEMORY_MANAGEMENT
#cmakedefine SQLITE_ENABLE_MEMSYS3
#cmakedefine SQLITE_ENABLE_MEMSYS5
#cmakedefine SQLITE_ENABLE_MULTIPLEX
#cmakedefine SQLITE_ENABLE_NORMALIZE
#cmakedefine SQLITE_ENABLE_NULL_TRIM
#cmakedefine SQLITE_ENABLE_OFFSET_SQL_FUNC
#cmakedefine SQLITE_ENABLE_OVERSIZE_CELL_CHECK
#cmakedefine SQLITE_ENABLE_PREUPDATE_HOOK
#cmakedefine SQLITE_ENABLE_QPSG
#cmakedefine SQLITE_ENABLE_RBU
#cmakedefine SQLITE_ENABLE_RTREE
#cmakedefine SQLITE_ENABLE_SESSION
#cmakedefine SQLITE_ENABLE_SNAPSHOT
#cmakedefine SQLITE_ENABLE_SORTER_REFERENCES
#cmakedefine SQLITE_ENABLE_SQLLOG
#cmakedefine SQLITE_ENABLE_STAT4
#cmakedefine SQLITE_ENABLE_STMTVTAB
#cmakedefine SQLITE_ENABLE_STMT_SCANSTATUS
#cmakedefine SQLITE_ENABLE_TREETRACE
#cmakedefine SQLITE_ENABLE_UNKNOWN_SQL_FUNCTION
#cmakedefine SQLITE_ENABLE_UNLOCK_NOTIFY
#cmakedefine SQLITE_ENABLE_UPDATE_DELETE_LIMIT
#cmakedefine SQLITE_ENABLE_URI_00_ERROR
#cmakedefine SQLITE_ENABLE_VFSTRACE
#cmakedefine SQLITE_ENABLE_WHERETRACE
#cmakedefine SQLITE_ENABLE_ZIPVFS
#cmakedefine SQLITE_EXPLAIN_ESTIMATED_ROWS

// unused:
#cmakedefine SQLITE_EXTRA_IFNULLROW

// invoke user-def function as part of library init:     int SQLITE_EXTRA_INIT(const char*);
//#define SQLITE_EXTRA_INIT

// invoke user-def function as part of library shutdown:      void SQLITE_EXTRA_SHUTDOWN(void);
//#define SQLITE_EXTRA_SHUTDOWN

//#define SQLITE_FTS3_MAX_EXPR_DEPTH 12

// invoke    int sqlite3Fts5TestRegisterMatchinfo(sqlite3*);
//#define SQLITE_FTS5_ENABLE_TEST_MI

#undef SQLITE_FTS5_NO_WITHOUT_ROWID

#define SQLITE_HAVE_ISNAN 1

//#cmakedefine SQLITE_HOMEGROWN_RECURSIVE_MUTEX   // is set up by platform-specific code

#cmakedefine SQLITE_IGNORE_AFP_LOCK_ERRORS
#cmakedefine SQLITE_IGNORE_FLOCK_LOCK_ERRORS

// This allows better measurements of where memcpy() is used when running cachegrind.  But this macro version of memcpy() is very slow so it should not be used in production.
//#undef SQLITE_INLINE_MEMCPY

//#define SQLITE_INT64_TYPE  sqlite_int64

//#define SQLITE_INTEGRITY_CHECK_ERROR_MAX 100

//#undef SQLITE_LIKE_DOESNT_MATCH_BLOBS

#cmakedefine SQLITE_LOCK_TRACE
#cmakedefine SQLITE_LOG_CACHE_SPILL
#cmakedefine SQLITE_MALLOC_SOFT_LIMIT
#cmakedefine SQLITE_MAX_ATTACHED
#cmakedefine SQLITE_MAX_COLUMN
#cmakedefine SQLITE_MAX_COMPOUND_SELECT
#cmakedefine SQLITE_MAX_DEFAULT_PAGE_SIZE
#cmakedefine SQLITE_MAX_EXPR_DEPTH
#cmakedefine SQLITE_MAX_FUNCTION_ARG
#cmakedefine SQLITE_MAX_LENGTH
#cmakedefine SQLITE_MAX_LIKE_PATTERN_LENGTH
#cmakedefine SQLITE_MAX_MEMORY
#cmakedefine SQLITE_MAX_MMAP_SIZE
#cmakedefine SQLITE_MAX_MMAP_SIZE_
#cmakedefine SQLITE_MAX_PAGE_COUNT
#cmakedefine SQLITE_MAX_PAGE_SIZE
#cmakedefine SQLITE_MAX_SCHEMA_RETRY
#cmakedefine SQLITE_MAX_SQL_LENGTH
#cmakedefine SQLITE_MAX_TRIGGER_DEPTH
#cmakedefine SQLITE_MAX_VARIABLE_NUMBER
#cmakedefine SQLITE_MAX_VDBE_OP
#cmakedefine SQLITE_MAX_WORKER_THREADS
#cmakedefine SQLITE_MEMDEBUG
#cmakedefine SQLITE_MIXED_ENDIAN_64BIT_FLOAT
#cmakedefine SQLITE_MMAP_READWRITE
#cmakedefine SQLITE_MUTEX_NOOP
#cmakedefine SQLITE_MUTEX_OMIT
#cmakedefine SQLITE_MUTEX_PTHREADS
#cmakedefine SQLITE_MUTEX_W32
#cmakedefine SQLITE_NEED_ERR_NAME
#cmakedefine SQLITE_NO_SYNC
#cmakedefine SQLITE_OMIT_ALTERTABLE
#cmakedefine SQLITE_OMIT_ANALYZE
#cmakedefine SQLITE_OMIT_ATTACH
#cmakedefine SQLITE_OMIT_AUTHORIZATION
#cmakedefine SQLITE_OMIT_AUTOINCREMENT
#cmakedefine SQLITE_OMIT_AUTOINIT
#cmakedefine SQLITE_OMIT_AUTOMATIC_INDEX
#cmakedefine SQLITE_OMIT_AUTORESET
#cmakedefine SQLITE_OMIT_AUTOVACUUM
#cmakedefine SQLITE_OMIT_BETWEEN_OPTIMIZATION
#cmakedefine SQLITE_OMIT_BLOB_LITERAL
#cmakedefine SQLITE_OMIT_CAST
#cmakedefine SQLITE_OMIT_CHECK
#cmakedefine SQLITE_OMIT_COMPLETE
#cmakedefine SQLITE_OMIT_COMPOUND_SELECT
#cmakedefine SQLITE_OMIT_CONFLICT_CLAUSE
#cmakedefine SQLITE_OMIT_CTE
#cmakedefine SQLITE_OMIT_DATETIME_FUNCS
#cmakedefine SQLITE_OMIT_DESERIALIZE
#cmakedefine SQLITE_OMIT_DISKIO
#cmakedefine SQLITE_OMIT_EXPLAIN
#cmakedefine SQLITE_OMIT_FLAG_PRAGMAS
#cmakedefine SQLITE_OMIT_FLOATING_POINT
#cmakedefine SQLITE_OMIT_FOREIGN_KEY
#cmakedefine SQLITE_OMIT_GET_TABLE
#cmakedefine SQLITE_OMIT_HEX_INTEGER
#cmakedefine SQLITE_OMIT_INCRBLOB
#cmakedefine SQLITE_OMIT_INTEGRITY_CHECK
#cmakedefine SQLITE_OMIT_INTROSPECTION_PRAGMAS
#cmakedefine SQLITE_OMIT_JSON
#cmakedefine SQLITE_OMIT_LIKE_OPTIMIZATION
#cmakedefine SQLITE_OMIT_LOAD_EXTENSION
#cmakedefine SQLITE_OMIT_LOCALTIME
#cmakedefine SQLITE_OMIT_LOOKASIDE
#cmakedefine SQLITE_OMIT_MEMORYDB
#cmakedefine SQLITE_OMIT_OR_OPTIMIZATION
#cmakedefine SQLITE_OMIT_PAGER_PRAGMAS
#cmakedefine SQLITE_OMIT_PARSER_TRACE
#cmakedefine SQLITE_OMIT_POPEN
#cmakedefine SQLITE_OMIT_PRAGMA
#cmakedefine SQLITE_OMIT_PROGRESS_CALLBACK
#cmakedefine SQLITE_OMIT_QUICKBALANCE
#cmakedefine SQLITE_OMIT_REINDEX
#cmakedefine SQLITE_OMIT_SCHEMA_PRAGMAS
#cmakedefine SQLITE_OMIT_SCHEMA_VERSION_PRAGMAS
#cmakedefine SQLITE_OMIT_SHARED_CACHE
#cmakedefine SQLITE_OMIT_SHUTDOWN_DIRECTORIES
#cmakedefine SQLITE_OMIT_SUBQUERY
#cmakedefine SQLITE_OMIT_TCL_VARIABLE
#cmakedefine SQLITE_OMIT_TEMPDB
#cmakedefine SQLITE_OMIT_TEST_CONTROL
#cmakedefine SQLITE_OMIT_TRACE
#cmakedefine SQLITE_OMIT_TRIGGER
#cmakedefine SQLITE_OMIT_TRUNCATE_OPTIMIZATION
#cmakedefine SQLITE_OMIT_UTF16
#cmakedefine SQLITE_OMIT_VACUUM
#cmakedefine SQLITE_OMIT_VIEW
#cmakedefine SQLITE_OMIT_VIRTUALTABLE
#cmakedefine SQLITE_OMIT_WAL
#cmakedefine SQLITE_OMIT_WSD
#cmakedefine SQLITE_OMIT_XFER_OPT
#cmakedefine SQLITE_PERFORMANCE_TRACE
#cmakedefine SQLITE_POWERSAFE_OVERWRITE
#cmakedefine SQLITE_PREFER_PROXY_LOCKING
#cmakedefine SQLITE_PROXY_DEBUG
#cmakedefine SQLITE_REVERSE_UNORDERED_SELECTS
#cmakedefine SQLITE_RTREE_INT_ONLY
#cmakedefine SQLITE_SECURE_DELETE
#cmakedefine SQLITE_SMALL_STACK
#cmakedefine SQLITE_SORTER_PMASZ
#cmakedefine SQLITE_SOUNDEX
//#define SQLITE_STAT4_SAMPLES 24
#cmakedefine SQLITE_STMTJRNL_SPILL
#cmakedefine SQLITE_SUBSTR_COMPATIBILITY
#cmakedefine SQLITE_SYSTEM_MALLOC
#cmakedefine SQLITE_TCL
#cmakedefine SQLITE_TEMP_STORE
#cmakedefine SQLITE_TEST
#cmakedefine SQLITE_THREADSAFE
#cmakedefine SQLITE_UNLINK_AFTER_CLOSE
#cmakedefine SQLITE_UNTESTABLE
#cmakedefine SQLITE_USER_AUTHENTICATION
#cmakedefine SQLITE_USE_ALLOCA
#cmakedefine SQLITE_USE_FCNTL_TRACE
#cmakedefine SQLITE_USE_URI
#cmakedefine SQLITE_VDBE_COVERAGE
#cmakedefine SQLITE_WIN32_MALLOC
#cmakedefine SQLITE_ZERO_MALLOC


#if defined(SQLITE_OMIT_DECLTYPE) && defined(SQLITE_ENABLE_COLUMN_METADATA)
#  undef SQLITE_OMIT_DECLTYPE
#endif

#ifdef SQLITE_ENABLE_SQLLOG
void sqlite3_init_sqllog(void);
#endif

#endif /* SQLITE3_CONFIG_H */
